name: Deploy to Server (Docker)

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # GitHub Actions 수동 실행 지원

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}:latest   # GHCR 이미지 이름

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # ---------- (1) Docker 이미지 빌드, arg 명령어로 환경변수 전달 ----------
      - name: Build Docker image
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_KAKAO_SHARE=${{ secrets.NEXT_PUBLIC_KAKAO_SHARE }} \
            -t $IMAGE_NAME .

      # ---------- (2) GHCR에 로그인 ----------
      - name: Login to GHCR
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # ---------- (3) GHCR에 이미지 푸시 ----------
      - name: Push image to GHCR
        run: docker push $IMAGE_NAME

      # ---------- (4) 서버에 접속하여 Docker 이미지 Pull 및 실행 ----------
      - name: Deploy to server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p 22 \
              ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            IMAGE="ghcr.io/${{ github.repository }}:latest"
            echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull $IMAGE
            docker stop animal || true && docker rm animal || true
            docker run -d --name animal --network animal-net \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e NEXT_PUBLIC_KAKAO_SHARE=${{ secrets.NEXT_PUBLIC_KAKAO_SHARE }} \
              -p 3000:3000 --restart=always $IMAGE
            docker image prune -f
          EOF